#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace M.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Lader")]
	public partial class LaderDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAREAS(AREAS instance);
    partial void UpdateAREAS(AREAS instance);
    partial void DeleteAREAS(AREAS instance);
    partial void InsertDATATABLE(DATATABLE instance);
    partial void UpdateDATATABLE(DATATABLE instance);
    partial void DeleteDATATABLE(DATATABLE instance);
    partial void InsertTYPENAME(TYPENAME instance);
    partial void UpdateTYPENAME(TYPENAME instance);
    partial void DeleteTYPENAME(TYPENAME instance);
    #endregion
		
		public LaderDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["LaderConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LaderDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LaderDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LaderDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LaderDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AREAS> AREAS
		{
			get
			{
				return this.GetTable<AREAS>();
			}
		}
		
		public System.Data.Linq.Table<DATATABLE> DATATABLE
		{
			get
			{
				return this.GetTable<DATATABLE>();
			}
		}
		
		public System.Data.Linq.Table<TYPENAME> TYPENAME
		{
			get
			{
				return this.GetTable<TYPENAME>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AREAS")]
	public partial class AREAS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _areaname;
		
		private string _x_coord;
		
		private string _y_coord;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnareanameChanging(string value);
    partial void OnareanameChanged();
    partial void Onx_coordChanging(string value);
    partial void Onx_coordChanged();
    partial void Ony_coordChanging(string value);
    partial void Ony_coordChanged();
    #endregion
		
		public AREAS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_areaname", DbType="VarChar(50)")]
		public string areaname
		{
			get
			{
				return this._areaname;
			}
			set
			{
				if ((this._areaname != value))
				{
					this.OnareanameChanging(value);
					this.SendPropertyChanging();
					this._areaname = value;
					this.SendPropertyChanged("areaname");
					this.OnareanameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_x_coord", DbType="VarChar(50)")]
		public string x_coord
		{
			get
			{
				return this._x_coord;
			}
			set
			{
				if ((this._x_coord != value))
				{
					this.Onx_coordChanging(value);
					this.SendPropertyChanging();
					this._x_coord = value;
					this.SendPropertyChanged("x_coord");
					this.Onx_coordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_y_coord", DbType="VarChar(50)")]
		public string y_coord
		{
			get
			{
				return this._y_coord;
			}
			set
			{
				if ((this._y_coord != value))
				{
					this.Ony_coordChanging(value);
					this.SendPropertyChanging();
					this._y_coord = value;
					this.SendPropertyChanged("y_coord");
					this.Ony_coordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DATATABLE")]
	public partial class DATATABLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _industrytype;
		
		private string _tatol;
		
		private System.Nullable<int> _years;
		
		private int _areaid;
		
		private string _bp;
		
		private EntityRef<TYPENAME> _TYPENAME;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnindustrytypeChanging(System.Nullable<int> value);
    partial void OnindustrytypeChanged();
    partial void OntatolChanging(string value);
    partial void OntatolChanged();
    partial void OnyearsChanging(System.Nullable<int> value);
    partial void OnyearsChanged();
    partial void OnareaidChanging(int value);
    partial void OnareaidChanged();
    partial void OnbpChanging(string value);
    partial void OnbpChanged();
    #endregion
		
		public DATATABLE()
		{
			this._TYPENAME = default(EntityRef<TYPENAME>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_industrytype", DbType="Int")]
		public System.Nullable<int> industrytype
		{
			get
			{
				return this._industrytype;
			}
			set
			{
				if ((this._industrytype != value))
				{
					this.OnindustrytypeChanging(value);
					this.SendPropertyChanging();
					this._industrytype = value;
					this.SendPropertyChanged("industrytype");
					this.OnindustrytypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tatol", DbType="VarChar(50)")]
		public string tatol
		{
			get
			{
				return this._tatol;
			}
			set
			{
				if ((this._tatol != value))
				{
					this.OntatolChanging(value);
					this.SendPropertyChanging();
					this._tatol = value;
					this.SendPropertyChanged("tatol");
					this.OntatolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_years", DbType="Int")]
		public System.Nullable<int> years
		{
			get
			{
				return this._years;
			}
			set
			{
				if ((this._years != value))
				{
					this.OnyearsChanging(value);
					this.SendPropertyChanging();
					this._years = value;
					this.SendPropertyChanged("years");
					this.OnyearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_areaid", DbType="Int NOT NULL")]
		public int areaid
		{
			get
			{
				return this._areaid;
			}
			set
			{
				if ((this._areaid != value))
				{
					if (this._TYPENAME.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnareaidChanging(value);
					this.SendPropertyChanging();
					this._areaid = value;
					this.SendPropertyChanged("areaid");
					this.OnareaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bp", DbType="VarChar(50)")]
		public string bp
		{
			get
			{
				return this._bp;
			}
			set
			{
				if ((this._bp != value))
				{
					this.OnbpChanging(value);
					this.SendPropertyChanging();
					this._bp = value;
					this.SendPropertyChanged("bp");
					this.OnbpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPENAME_DATATABLE", Storage="_TYPENAME", ThisKey="areaid", OtherKey="id", IsForeignKey=true)]
		public TYPENAME TYPENAME
		{
			get
			{
				return this._TYPENAME.Entity;
			}
			set
			{
				TYPENAME previousValue = this._TYPENAME.Entity;
				if (((previousValue != value) 
							|| (this._TYPENAME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TYPENAME.Entity = null;
						previousValue.DATATABLE.Remove(this);
					}
					this._TYPENAME.Entity = value;
					if ((value != null))
					{
						value.DATATABLE.Add(this);
						this._areaid = value.id;
					}
					else
					{
						this._areaid = default(int);
					}
					this.SendPropertyChanged("TYPENAME");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TYPENAME")]
	public partial class TYPENAME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _typename1;
		
		private System.Nullable<int> _parentid;
		
		private EntitySet<DATATABLE> _DATATABLE;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ontypename1Changing(string value);
    partial void Ontypename1Changed();
    partial void OnparentidChanging(System.Nullable<int> value);
    partial void OnparentidChanged();
    #endregion
		
		public TYPENAME()
		{
			this._DATATABLE = new EntitySet<DATATABLE>(new Action<DATATABLE>(this.attach_DATATABLE), new Action<DATATABLE>(this.detach_DATATABLE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="typename", Storage="_typename1", DbType="VarChar(50)")]
		public string typename1
		{
			get
			{
				return this._typename1;
			}
			set
			{
				if ((this._typename1 != value))
				{
					this.Ontypename1Changing(value);
					this.SendPropertyChanging();
					this._typename1 = value;
					this.SendPropertyChanged("typename1");
					this.Ontypename1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentid", DbType="Int")]
		public System.Nullable<int> parentid
		{
			get
			{
				return this._parentid;
			}
			set
			{
				if ((this._parentid != value))
				{
					this.OnparentidChanging(value);
					this.SendPropertyChanging();
					this._parentid = value;
					this.SendPropertyChanged("parentid");
					this.OnparentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TYPENAME_DATATABLE", Storage="_DATATABLE", ThisKey="id", OtherKey="areaid")]
		public EntitySet<DATATABLE> DATATABLE
		{
			get
			{
				return this._DATATABLE;
			}
			set
			{
				this._DATATABLE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DATATABLE(DATATABLE entity)
		{
			this.SendPropertyChanging();
			entity.TYPENAME = this;
		}
		
		private void detach_DATATABLE(DATATABLE entity)
		{
			this.SendPropertyChanging();
			entity.TYPENAME = null;
		}
	}
}
#pragma warning restore 1591
